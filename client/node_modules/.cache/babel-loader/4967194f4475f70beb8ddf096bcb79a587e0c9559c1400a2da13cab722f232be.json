{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\e commerce website\\\\client\\\\src\\\\Payment.jsx\";\nimport React from 'react';\nimport { loadStripe } from '@stripe/stripe-js'; //for payment \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst make_payment = async () => {\n  const stripe = await loadStripe('pk_test_51NkQDHSG1F80rKm2dNFFXW0WIc7Vu6UEH9cfyeDKdBmNV27UyBPjn2pBP5CNvUJuK4pCQRh0ikJS4ZrdXovdUpOd00WSe7sL1E');\n\n  // this is publisher key of stripe you get it from the stripe website \n\n  // this is passed to the backend , this is a array\n  const obj = [{\n    name: \"John\",\n    price: 55,\n    quantity: 2\n  }, {\n    name: \"hii\",\n    price: 60,\n    quantity: 3\n  }];\n  const body = {\n    products: obj\n  };\n\n  // fetch request backend pe jayegi \n\n  try {\n    const response = await fetch('http://localhost:5000/payment', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(body),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    // here we get object in this we get id \n    const session = await response.json();\n\n    // after getting the id from the backend then we go on the checkout page \n    const result = stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n    if (result.error) {\n      console.log(result.error);\n    }\n  } catch (err) {\n    console.log(err);\n    avigate('');\n  }\n};\nconst Payment = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: make_payment,\n      children: \"Make Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","loadStripe","jsxDEV","_jsxDEV","make_payment","stripe","obj","name","price","quantity","body","products","response","fetch","method","credentials","JSON","stringify","headers","session","json","result","redirectToCheckout","sessionId","id","error","console","log","err","avigate","Payment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/web development/e commerce website/client/src/Payment.jsx"],"sourcesContent":["import React from 'react'\r\nimport {loadStripe} from '@stripe/stripe-js';    //for payment \r\n\r\n\r\n\r\n\r\nconst make_payment=async()=>{\r\n\r\n   \r\n  \r\n  \r\n  const stripe = await loadStripe('pk_test_51NkQDHSG1F80rKm2dNFFXW0WIc7Vu6UEH9cfyeDKdBmNV27UyBPjn2pBP5CNvUJuK4pCQRh0ikJS4ZrdXovdUpOd00WSe7sL1E');\r\n\r\n// this is publisher key of stripe you get it from the stripe website \r\n\r\n    // this is passed to the backend , this is a array\r\n    const obj = [{name: \"John\",price:55,quantity:2},{name:\"hii\",price:60,quantity:3}];\r\n\r\n\r\n    const body={\r\n      products:obj\r\n    }\r\n\r\n    // fetch request backend pe jayegi \r\n\r\n\r\n    try{\r\n      const response=await fetch('http://localhost:5000/payment',{\r\n        method:'POST',\r\n        credentials: 'include',\r\n        body:JSON.stringify(body),\r\n        headers:{\r\n          \"Content-Type\" : \"application/json\"\r\n        },\r\n      })\r\n    \r\n    // here we get object in this we get id \r\n    const session=await response.json();\r\n\r\n    // after getting the id from the backend then we go on the checkout page \r\n    const result=stripe.redirectToCheckout({\r\n        sessionId:session.id\r\n    })\r\n\r\n    if(result.error){\r\n        console.log(result.error);\r\n    }\r\n    }\r\n    catch(err){\r\n      console.log(err);\r\n      avigate('')\r\n    }\r\n    \r\n}\r\n\r\nconst Payment = () => {\r\n  return (\r\n    <div>\r\n        <button onClick={make_payment}>Make Payment</button>    \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Payment\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,QAAO,mBAAmB,CAAC,CAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKjD,MAAMC,YAAY,GAAC,MAAAA,CAAA,KAAS;EAK1B,MAAMC,MAAM,GAAG,MAAMJ,UAAU,CAAC,6GAA6G,CAAC;;EAEhJ;;EAEI;EACA,MAAMK,GAAG,GAAG,CAAC;IAACC,IAAI,EAAE,MAAM;IAACC,KAAK,EAAC,EAAE;IAACC,QAAQ,EAAC;EAAC,CAAC,EAAC;IAACF,IAAI,EAAC,KAAK;IAACC,KAAK,EAAC,EAAE;IAACC,QAAQ,EAAC;EAAC,CAAC,CAAC;EAGjF,MAAMC,IAAI,GAAC;IACTC,QAAQ,EAACL;EACX,CAAC;;EAED;;EAGA,IAAG;IACD,MAAMM,QAAQ,GAAC,MAAMC,KAAK,CAAC,+BAA+B,EAAC;MACzDC,MAAM,EAAC,MAAM;MACbC,WAAW,EAAE,SAAS;MACtBL,IAAI,EAACM,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC;MACzBQ,OAAO,EAAC;QACN,cAAc,EAAG;MACnB;IACF,CAAC,CAAC;;IAEJ;IACA,MAAMC,OAAO,GAAC,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;;IAEnC;IACA,MAAMC,MAAM,GAAChB,MAAM,CAACiB,kBAAkB,CAAC;MACnCC,SAAS,EAACJ,OAAO,CAACK;IACtB,CAAC,CAAC;IAEF,IAAGH,MAAM,CAACI,KAAK,EAAC;MACZC,OAAO,CAACC,GAAG,CAACN,MAAM,CAACI,KAAK,CAAC;IAC7B;EACA,CAAC,CACD,OAAMG,GAAG,EAAC;IACRF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;IAChBC,OAAO,CAAC,EAAE,CAAC;EACb;AAEJ,CAAC;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,oBACE3B,OAAA;IAAA4B,QAAA,eACI5B,OAAA;MAAQ6B,OAAO,EAAE5B,YAAa;MAAA2B,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAAC,EAAA,GANKP,OAAO;AAQb,eAAeA,OAAO;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}