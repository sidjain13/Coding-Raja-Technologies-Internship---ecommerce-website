{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\react js\\\\project_simple_website\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport Skills from './Skills';\nimport About from './About';\nimport Contact from './Contact';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport Footer from './Footer';\n// import { Redirect } from 'react-router-dom';\n\n//requiring packages \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst express = require(\"express\");\nconst app = express();\nconst path = require(\"path\");\nconst mongoose = require(\"mongoose\");\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        Component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/skills\",\n        exact: true,\n        Component: Skills\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        exact: true,\n        Component: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        exact: true,\n        Component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        exact: true,\n        Component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_c = App;\nexport default App;\n\n// requiring connfile \nrequire('./db/connection');\n\n//requiring schema file\nconst UserDetail1 = require('./models/register');\n// const { request } = require(\"http\");\n\n//defining port\nconst port = process.env.PORT || 3000;\n\n// ye samaj nahi aaya \napp.use(express.json()); //isse json me nahi dikta\napp.use(express.urlencoded({\n  extended: false\n})); //isse undefined nahi aata\n\n//post methods getting data of the form and insert into database\napp.post('/contact', async (req, res) => {\n  try {\n    if (password2 === cpassword2) {\n      const detail = new UserDetail1({\n        email: req.body.email1,\n        name: req.body.name1,\n        password: req.body.password1,\n        cpassword: req.body.cpassword1,\n        age: req.body.age1,\n        phone: req.body.phone1\n        // gender:req.body.gen,\n      });\n\n      // iske phele model me register.js me bcrypt ka code chalega\n\n      const result = await detail.save();\n      res.render('index.hbs');\n    } else {\n      res.send('password not matched');\n    }\n  } catch (err) {\n    res.status(400).send(err);\n  }\n});\n\n// post method for login page \napp.post('/login', async (req, res) => {\n  try {\n    const email3 = req.body.email2;\n    const password3 = req.body.password2;\n    const login_detail = await UserDetail1.findOne({\n      email: email3\n    });\n    const isMatch = await bcrypt.compare(password3, login_detail.password);\n    console.log(isMatch);\n    console.log(login_detail.password);\n    console.log(password3);\n    if (isMatch) {\n      res.render('index.hbs');\n    } else {\n      res.send('invalid login details');\n    }\n  } catch (err) {\n    res.status(400).send(\"invalid login details 1 \");\n  }\n});\n\n// listening server\napp.listen(port, () => {\n  console.log(`server is running on port ${port}`);\n});\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navbar","Home","Skills","About","Contact","Navigate","Route","Routes","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","express","require","app","path","mongoose","App","children","fileName","_jsxFileName","lineNumber","columnNumber","exact","Component","_c","UserDetail1","port","process","env","PORT","use","json","urlencoded","extended","post","req","res","password2","cpassword2","detail","email","body","email1","name","name1","password","password1","cpassword","cpassword1","age","age1","phone","phone1","result","save","render","send","err","status","email3","email2","password3","login_detail","findOne","isMatch","bcrypt","compare","console","log","listen","$RefreshReg$"],"sources":["D:/web development/react js/project_simple_website/src/App.jsx"],"sourcesContent":["import React from 'react'\r\nimport Navbar from './Navbar';\r\nimport Home from './Home';\r\nimport Skills from './Skills';\r\nimport About from './About';\r\nimport Contact from './Contact';\r\nimport { Navigate, Route, Routes } from 'react-router-dom';\r\nimport Footer from './Footer';\r\n// import { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\n//requiring packages \r\nconst express=require(\"express\");\r\nconst app=express();\r\nconst path=require(\"path\");\r\nconst mongoose=require(\"mongoose\");\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n        <Navbar/>\r\n        <Routes>\r\n            <Route path='/' exact Component={Home} />\r\n            <Route path='/skills' exact Component={Skills} />\r\n            <Route path='/contact' exact Component={Contact} />\r\n            <Route path='/about' exact Component={About} />\r\n            <Route path='/*' exact Component={Home} />\r\n        </Routes>\r\n        <Footer/>\r\n     \r\n    </>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n\r\n// requiring connfile \r\nrequire('./db/connection');\r\n\r\n//requiring schema file\r\nconst UserDetail1=require('./models/register');\r\n// const { request } = require(\"http\");\r\n\r\n\r\n//defining port\r\nconst port=process.env.PORT || 3000;\r\n\r\n// ye samaj nahi aaya \r\napp.use(express.json());                                //isse json me nahi dikta\r\napp.use(express.urlencoded({extended:false}));          //isse undefined nahi aata\r\n\r\n\r\n//post methods getting data of the form and insert into database\r\napp.post('/contact',async(req,res)=>{\r\n    try{\r\n        \r\n        if(password2===cpassword2){\r\n            const detail=new UserDetail1({\r\n                email:req.body.email1,\r\n                name:req.body.name1,\r\n                password:req.body.password1,\r\n                cpassword:req.body.cpassword1,\r\n                age:req.body.age1,\r\n                phone:req.body.phone1,\r\n                // gender:req.body.gen,\r\n                \r\n            })\r\n\r\n\r\n            // iske phele model me register.js me bcrypt ka code chalega\r\n\r\n\r\n            const result=await detail.save();\r\n            res.render('index.hbs');           \r\n        }\r\n        else{\r\n            res.send('password not matched');\r\n        }\r\n\r\n    }\r\n    catch(err){\r\n        res.status(400).send(err)\r\n    }\r\n})\r\n\r\n\r\n// post method for login page \r\napp.post('/login',async(req,res)=>{\r\n    try{\r\n        const email3=req.body.email2;\r\n        const password3=req.body.password2;\r\n        const login_detail=await UserDetail1.findOne({email:email3})\r\n        \r\n        const isMatch=await bcrypt.compare(password3,login_detail.password);\r\n        console.log(isMatch);\r\n        console.log(login_detail.password);\r\n        console.log(password3);\r\n        if(isMatch){\r\n            res.render('index.hbs');          \r\n        }\r\n        else{\r\n            res.send('invalid login details');\r\n        }\r\n\r\n    }\r\n    catch(err){\r\n        res.status(400).send(\"invalid login details 1 \");\r\n    }\r\n})\r\n\r\n\r\n// listening server\r\napp.listen(port,()=>{\r\n    console.log(`server is running on port ${port}`);\r\n})\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}