{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\e commerce website\\\\client\\\\src\\\\Carts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js'; //for payment \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Carts = () => {\n  _s();\n  const [userData, setUserData] = useState([]); //in this we store the items to display in cart\n\n  useEffect(() => {\n    //when we open about page then callAboutPage is called once\n    callCartItem(); // can't use async function in useeffect hook\n  }, []);\n  const callCartItem = async () => {\n    const res = await fetch('http://localhost:5000/carts', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    console.log(data);\n    setUserData(data);\n  };\n  const make_payment = async () => {\n    const stripe = await loadStripe('pk_test_51NkQDHSG1F80rKm2dNFFXW0WIc7Vu6UEH9cfyeDKdBmNV27UyBPjn2pBP5CNvUJuK4pCQRh0ikJS4ZrdXovdUpOd00WSe7sL1E');\n\n    // this is publisher key of stripe you get it from the stripe website \n\n    // this is passed to the backend ,this is a array\n    // const obj = [{name: \"John\",price:55,quantity:2},{name:\"hii\",price:60,quantity:3}];\n    // const obj = [{name: \"John\",price:55,quantity:2},{name:\"hii\",price:60,quantity:3}];\n\n    const body = {\n      products: obj\n    };\n\n    // fetch request backend pe jayegi \n\n    const response = await fetch('http://localhost:5000/payment', {\n      method: 'POST',\n      credentials: 'include',\n      body: JSON.stringify(body),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    // here we get object in this we get id \n    const session = await response.json();\n\n    // after getting the id from the backend then we go on the checkout page \n    const result = stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n    if (result.error) {\n      console.log(result.error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [userData.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 31\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dibba\",\n      children: /* getdata.map((element,id)=>{ */\n      userData.map((element, id) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card mt-5 ms-5\",\n            style: {\n              width: '18rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element.image,\n              class: \"card-img-top\",\n              style: {\n                height: '10rem'\n              },\n              alt: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"card-title\",\n                children: element.product_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price :  \\u20B9 \", element.product_price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"card-text\",\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: async () => {\n                  const res = await fetch('http://localhost:5000/delete_product', {\n                    method: 'POST',\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      product_name: element.product_name\n                    }),\n                    credentials: \"include\"\n                  });\n                },\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: async () => {\n                  const res = await fetch('http://localhost:5000/increment_product', {\n                    method: 'POST',\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      product_name: element.product_name\n                    }),\n                    credentials: \"include\"\n                  });\n                },\n                children: [\"increment : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: element.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: async () => {\n                  const res = await fetch('http://localhost:5000/decrement_product', {\n                    method: 'POST',\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      product_name: element.product_name\n                    }),\n                    credentials: \"include\"\n                  });\n                },\n                children: [\"decrement : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: element.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: make_payment,\n        children: \"Make Payment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Carts, \"a5RRa6NGDeZPfKLUsTyKB81I/p0=\");\n_c = Carts;\nexport default Carts;\nvar _c;\n$RefreshReg$(_c, \"Carts\");","map":{"version":3,"names":["React","useEffect","useState","loadStripe","jsxDEV","_jsxDEV","Fragment","_Fragment","Carts","_s","userData","setUserData","callCartItem","res","fetch","method","headers","credentials","data","json","console","log","make_payment","stripe","body","products","obj","response","JSON","stringify","session","result","redirectToCheckout","sessionId","id","error","children","length","fileName","_jsxFileName","lineNumber","columnNumber","className","map","element","class","style","width","src","image","height","alt","product_name","product_price","onClick","quantity","_c","$RefreshReg$"],"sources":["D:/web development/e commerce website/client/src/Carts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {loadStripe} from '@stripe/stripe-js';    //for payment \r\n\r\nconst Carts =() => {\r\n    const [userData,setUserData]=useState([]);    //in this we store the items to display in cart\r\n\r\n    useEffect(()=>{     //when we open about page then callAboutPage is called once\r\n      callCartItem();  // can't use async function in useeffect hook\r\n    },[])\r\n\r\n    const callCartItem=async()=>{\r\n      const res=await fetch('http://localhost:5000/carts',{\r\n      method:'GET',\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      \r\n      credentials:\"include\"\r\n    })\r\n\r\n    const data=await res.json()\r\n    console.log(data);\r\n\r\n    setUserData(data)\r\n    }\r\n\r\n\r\n\r\n    const make_payment=async()=>{\r\n\r\n   \r\n  \r\n      const stripe = await loadStripe('pk_test_51NkQDHSG1F80rKm2dNFFXW0WIc7Vu6UEH9cfyeDKdBmNV27UyBPjn2pBP5CNvUJuK4pCQRh0ikJS4ZrdXovdUpOd00WSe7sL1E');\r\n    \r\n    // this is publisher key of stripe you get it from the stripe website \r\n    \r\n        // this is passed to the backend ,this is a array\r\n        // const obj = [{name: \"John\",price:55,quantity:2},{name:\"hii\",price:60,quantity:3}];\r\n        // const obj = [{name: \"John\",price:55,quantity:2},{name:\"hii\",price:60,quantity:3}];\r\n    \r\n    \r\n        const body={\r\n          products:obj\r\n        }\r\n    \r\n        // fetch request backend pe jayegi \r\n    \r\n    \r\n       \r\n          const response=await fetch('http://localhost:5000/payment',{\r\n            method:'POST',\r\n            credentials: 'include',\r\n            body:JSON.stringify(body),\r\n            headers:{\r\n              \"Content-Type\" : \"application/json\"\r\n            },\r\n          })\r\n        \r\n        // here we get object in this we get id \r\n        const session=await response.json();\r\n    \r\n        // after getting the id from the backend then we go on the checkout page \r\n        const result=stripe.redirectToCheckout({\r\n            sessionId:session.id\r\n        })\r\n    \r\n        if(result.error){\r\n            console.log(result.error);\r\n        }\r\n       \r\n        \r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n      <>\r\n        {userData.length===0 ?<h1>cart is empty</h1>:null}\r\n      \r\n        <div className='dibba' >\r\n        {\r\n          /* getdata.map((element,id)=>{ */\r\n          userData.map((element,id)=>{\r\n            return (\r\n              <>\r\n              <div class=\"card mt-5 ms-5\" style={{width: '18rem'}}>\r\n      <img src={element.image} class=\"card-img-top\" style={{height:'10rem'}} alt=\"error\" />\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{element.product_name}</h5>\r\n        <p>Price :  ₹ {element.product_price}</p>\r\n        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n        <p onClick={async()=>{\r\n          const res=await fetch('http://localhost:5000/delete_product',{\r\n      method:'POST',\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n          product_name:element.product_name\r\n      }),\r\n      \r\n      credentials:\"include\"\r\n    })\r\n        }}>delete</p>\r\n\r\n        {/* for increment  */}\r\n        <p onClick={async()=>{\r\n          const res=await fetch('http://localhost:5000/increment_product',{\r\n      method:'POST',\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n          product_name:element.product_name\r\n      }),\r\n      \r\n      credentials:\"include\"\r\n    })\r\n        }} >increment : <span>{element.quantity}</span></p>\r\n\r\n        {/* for decrement  */}\r\n        <p onClick={async()=>{\r\n          const res=await fetch('http://localhost:5000/decrement_product',{\r\n      method:'POST',\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n          product_name:element.product_name\r\n      }),\r\n      \r\n      credentials:\"include\"\r\n    })\r\n        }} >decrement : <span>{element.quantity}</span></p>\r\n      \r\n      </div>\r\n    </div>\r\n\r\n\r\n    \r\n              </>\r\n            )\r\n          })\r\n        }\r\n          \r\n    \r\n    \r\n        </div>\r\n        <div>\r\n            <button onClick={make_payment}>Make Payment</button>    \r\n        </div>\r\n     </> )\r\n\r\n   \r\n}\r\n\r\nexport default Carts\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}