{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development\\\\e commerce website\\\\client\\\\src\\\\Carts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Carts = () => {\n  _s();\n  const [userData, setUserData] = useState([]); //in this we store the items to display in cart\n\n  useEffect(() => {\n    //when we open about page then callAboutPage is called once\n    callCartItem(); // can't use async function in useeffect hook\n  }, []);\n  const callCartItem = async () => {\n    const res = await fetch('http://localhost:5000/carts', {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\"\n    });\n    const data = await res.json();\n    console.log(data);\n    setUserData(data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [userData.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dibba\",\n      children: /* getdata.map((element,id)=>{ */\n      userData.map((element, id) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card mt-5 ms-5\",\n            style: {\n              width: '18rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: element.image,\n              class: \"card-img-top\",\n              style: {\n                height: '10rem'\n              },\n              alt: \"error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                class: \"card-title\",\n                children: element.product_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Price :  \\u20B9 \", element.product_price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                class: \"card-text\",\n                children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: async () => {\n                  const res = await fetch('http://localhost:5000/delete_product', {\n                    method: 'POST',\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      product_name: element.product_name\n                    }),\n                    credentials: \"include\"\n                  });\n                },\n                children: \"delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: async () => {\n                  const res = await fetch('http://localhost:5000/increment_product', {\n                    method: 'POST',\n                    headers: {\n                      \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                      product_name: element.product_name\n                    }),\n                    credentials: \"include\"\n                  });\n                },\n                children: \"increment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Carts, \"a5RRa6NGDeZPfKLUsTyKB81I/p0=\");\n_c = Carts;\nexport default Carts;\nvar _c;\n$RefreshReg$(_c, \"Carts\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Carts","_s","userData","setUserData","callCartItem","res","fetch","method","headers","credentials","data","json","console","log","children","length","fileName","_jsxFileName","lineNumber","columnNumber","className","map","element","id","class","style","width","src","image","height","alt","product_name","product_price","onClick","body","JSON","stringify","_c","$RefreshReg$"],"sources":["D:/web development/e commerce website/client/src/Carts.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\n\r\nconst Carts =() => {\r\n    const [userData,setUserData]=useState([]);    //in this we store the items to display in cart\r\n\r\n    useEffect(()=>{     //when we open about page then callAboutPage is called once\r\n      callCartItem();  // can't use async function in useeffect hook\r\n    },[])\r\n\r\n    const callCartItem=async()=>{\r\n      const res=await fetch('http://localhost:5000/carts',{\r\n      method:'GET',\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      \r\n      credentials:\"include\"\r\n    })\r\n\r\n    const data=await res.json()\r\n    console.log(data);\r\n\r\n    setUserData(data)\r\n    }\r\n\r\n\r\n    \r\n\r\n    return (\r\n      <>\r\n        {userData.length===0 ?<h1>cart is empty</h1>:null}\r\n      \r\n        <div className='dibba' >\r\n        {\r\n          /* getdata.map((element,id)=>{ */\r\n          userData.map((element,id)=>{\r\n            return (\r\n              <>\r\n              <div class=\"card mt-5 ms-5\" style={{width: '18rem'}}>\r\n      <img src={element.image} class=\"card-img-top\" style={{height:'10rem'}} alt=\"error\" />\r\n      <div class=\"card-body\">\r\n        <h5 class=\"card-title\">{element.product_name}</h5>\r\n        <p>Price :  â‚¹ {element.product_price}</p>\r\n        <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n        <p onClick={async()=>{\r\n          const res=await fetch('http://localhost:5000/delete_product',{\r\n      method:'POST',\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n          product_name:element.product_name\r\n      }),\r\n      \r\n      credentials:\"include\"\r\n    })\r\n        }}>delete</p>\r\n        <p onClick={async()=>{\r\n          const res=await fetch('http://localhost:5000/increment_product',{\r\n      method:'POST',\r\n      headers:{\r\n        \"Content-Type\" : \"application/json\"\r\n      },\r\n      body:JSON.stringify({\r\n          product_name:element.product_name\r\n      }),\r\n      \r\n      credentials:\"include\"\r\n    })\r\n        }} >increment</p>\r\n        <span></span>\r\n      </div>\r\n    </div>\r\n              </>\r\n            )\r\n          })\r\n        }\r\n          \r\n    \r\n    \r\n        </div>\r\n     </> )\r\n\r\n   \r\n}\r\n\r\nexport default Carts\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}